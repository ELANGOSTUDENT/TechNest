{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Documents\\\\TechNest---Blogging-application-main\\\\client\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport img1 from '../img/loginimg.jpg';\nimport { useState, useContext } from 'react';\nimport { AuthContext } from '../context/authContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [inputs, setInputs] = useState({\n    username: '',\n    password: ''\n  });\n  const [err, setError] = useState(null);\n  const navigate = useNavigate();\n  const {\n    login\n  } = useContext(AuthContext);\n  const handleChange = e => {\n    setInputs(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleSubmit = async e => {\n    // Check if the username and password are admin\n    //if (inputs.username === 'admin' && inputs.password === 'admin') {\n    // Navigate to the admin page\n    //navigate('/admin');\n    //return;\n    //}\n\n    try {\n      await login(inputs);\n      navigate('/');\n    } catch (err) {\n      setError(err.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    style: {\n      backgroundImage: `url(${img1})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        placeholder: \"username\",\n        name: \"username\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"password\",\n        placeholder: \"password\",\n        name: \"password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), err && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", err, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Don't you have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"TkA1fh8bOev0+AMsmA26uBNBbrM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Link","useNavigate","img1","useState","useContext","AuthContext","jsxDEV","_jsxDEV","Login","_s","inputs","setInputs","username","password","err","setError","navigate","login","handleChange","e","prev","target","name","value","handleSubmit","response","data","className","style","backgroundImage","children","fileName","_jsxFileName","lineNumber","columnNumber","required","type","placeholder","onChange","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/Public/Documents/TechNest---Blogging-application-main/client/src/pages/Login.jsx"],"sourcesContent":["import React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport img1 from '../img/loginimg.jpg';\nimport { useState, useContext } from 'react';\nimport { AuthContext } from '../context/authContext';\n\nconst Login = () => {\n  const [inputs, setInputs] = useState({\n    username: '',\n    password: '',\n  });\n\n  const [err, setError] = useState(null);\n    \n  const navigate = useNavigate();\n  const { login } = useContext(AuthContext);\n\n  const handleChange = (e) => {\n    setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  const handleSubmit = async (e) => {\n    \n\n    // Check if the username and password are admin\n    //if (inputs.username === 'admin' && inputs.password === 'admin') {\n      // Navigate to the admin page\n      //navigate('/admin');\n      //return;\n    //}\n\n    try {\n      await login(inputs);\n      navigate('/');\n    } catch (err) {\n      setError(err.response.data);\n    }\n  };\n\n  return (\n    <div className='auth' style={{ backgroundImage: `url(${img1})` }}>\n      <h1>Login</h1>\n      <form>\n        <input required type='text' placeholder='username' name='username' onChange={handleChange} />\n        <input required type='password' placeholder='password' name='password' onChange={handleChange} />\n        <button onClick={handleSubmit}>Login</button>\n        {err && <p> {err} </p>}\n        <span>\n          Don't you have an account? <Link to='/register'>Register</Link>\n        </span>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,IAAI,MAAM,qBAAqB;AACtC,SAASC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC;IACnCS,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMa,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEgB;EAAM,CAAC,GAAGb,UAAU,CAACC,WAAW,CAAC;EAEzC,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BR,SAAS,CAAES,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACE;IAAM,CAAC,CAAC,CAAC;EACrE,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOL,CAAC,IAAK;IAGhC;IACA;IACE;IACA;IACA;IACF;;IAEA,IAAI;MACF,MAAMF,KAAK,CAACP,MAAM,CAAC;MACnBM,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOF,GAAG,EAAE;MACZC,QAAQ,CAACD,GAAG,CAACW,QAAQ,CAACC,IAAI,CAAC;IAC7B;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,MAAM;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAE,OAAO3B,IAAI;IAAI,CAAE;IAAA4B,QAAA,gBAC/DvB,OAAA;MAAAuB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd3B,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAO4B,QAAQ;QAACC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,UAAU;QAACf,IAAI,EAAC,UAAU;QAACgB,QAAQ,EAAEpB;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7F3B,OAAA;QAAO4B,QAAQ;QAACC,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAACf,IAAI,EAAC,UAAU;QAACgB,QAAQ,EAAEpB;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjG3B,OAAA;QAAQgC,OAAO,EAAEf,YAAa;QAAAM,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC5CpB,GAAG,iBAAIP,OAAA;QAAAuB,QAAA,GAAG,GAAC,EAAChB,GAAG,EAAC,GAAC;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACtB3B,OAAA;QAAAuB,QAAA,GAAM,6BACuB,eAAAvB,OAAA,CAACP,IAAI;UAACwC,EAAE,EAAC,WAAW;UAAAV,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACzB,EAAA,CA/CID,KAAK;EAAA,QAQQP,WAAW;AAAA;AAAAwC,EAAA,GARxBjC,KAAK;AAiDX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}