{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Documents\\\\TechNest---Blogging-application-main\\\\client\\\\src\\\\pages\\\\Admin.jsx\",\n  _s = $RefreshSig$();\n// Admin.jsx\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Unreport from '..//img/unreport.jpeg';\nimport { AuthContext } from '../context/authContext.js';\nimport { useReportContext } from '../context/ReportContext.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  // State variables\n  const [posts, setPosts] = useState([]);\n  const cat = useLocation().search;\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    removeReportedPost\n  } = useReportContext();\n\n  // Function to fetch data from the server\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(`/posts${cat}`);\n      setPosts(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Fetch data on component mount and whenever cat or currentUser changes\n  useEffect(() => {\n    fetchData();\n  }, [cat, currentUser]);\n\n  // Function to handle unreporting a post\n  const handleUnreport = async postId => {\n    try {\n      const res = await axios.post(`/posts/unreportBlog/${postId}`);\n      removeReportedPost(postId); // Remove the reported post from the global state\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Function to render a truncated version of the post content\n  const getText = (html, maxLines = 4) => {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    const lines = doc.body.textContent.split('\\n');\n    const truncatedContent = lines.slice(0, maxLines).join('\\n');\n    return truncatedContent;\n  };\n\n  // Function to filter reported posts\n  const getReportedPosts = () => {\n    if (Array.isArray(posts)) {\n      return posts.filter(post => post.reported);\n    } else {\n      return [];\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ADMIN DASHBOARD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), getReportedPosts().map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `./uploads/${post.img}`,\n            alt: \"\",\n            style: {\n              width: '50%',\n              height: 'auto',\n              borderRadius: '8px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: getText(post.desc)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Report Reason:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 18\n            }, this), \" \", post.reportReason || 'No reason provided']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit\",\n            children: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.isAdmin) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: () => handleUnreport(post.id),\n                src: Unreport,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"OPJ8ld03Zgk0WTTXvZmMWLUrZCE=\", false, function () {\n  return [useLocation, useNavigate, useReportContext];\n});\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useLocation","useNavigate","axios","Unreport","AuthContext","useReportContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Admin","_s","posts","setPosts","cat","search","navigate","currentUser","removeReportedPost","fetchData","res","get","data","err","console","log","handleUnreport","postId","post","getText","html","maxLines","doc","DOMParser","parseFromString","lines","body","textContent","split","truncatedContent","slice","join","getReportedPosts","Array","isArray","filter","reported","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","img","alt","style","width","height","borderRadius","title","desc","reportReason","isAdmin","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Public/Documents/TechNest---Blogging-application-main/client/src/pages/Admin.jsx"],"sourcesContent":["// Admin.jsx\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Unreport from '..//img/unreport.jpeg';\nimport { AuthContext } from '../context/authContext.js';\nimport { useReportContext } from '../context/ReportContext.js';\n\nconst Admin = () => {\n  // State variables\n  const [posts, setPosts] = useState([]);\n  const cat = useLocation().search;\n  const navigate = useNavigate();\n  const { currentUser } = useContext(AuthContext);\n  const { removeReportedPost } = useReportContext();\n\n  // Function to fetch data from the server\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(`/posts${cat}`);\n      setPosts(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Fetch data on component mount and whenever cat or currentUser changes\n  useEffect(() => {\n    fetchData();\n  }, [cat, currentUser]);\n\n  // Function to handle unreporting a post\n  const handleUnreport = async (postId) => {\n    try {\n      const res = await axios.post(`/posts/unreportBlog/${postId}`);\n      removeReportedPost(postId); // Remove the reported post from the global state\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Function to render a truncated version of the post content\n  const getText = (html, maxLines = 4) => {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    const lines = doc.body.textContent.split('\\n');\n    const truncatedContent = lines.slice(0, maxLines).join('\\n');\n    return truncatedContent;\n  };\n\n  // Function to filter reported posts\n  const getReportedPosts = () => {\n    if (Array.isArray(posts)) {\n      return posts.filter((post) => post.reported);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <div className='admin-page'>\n      <div className='posts'>\n        <center>\n          <h1>ADMIN DASHBOARD</h1>\n        </center>\n        {getReportedPosts().map((post) => (\n          <div className='post' key={post.id}>\n            <div className='img'>\n            <img\n            src={`./uploads/${post.img}`}\n             alt=''\n             style={{ width: '50%', height: 'auto', borderRadius: '8px' }}\n            />\n\n            </div>\n            <div className='content'>\n              <h1>{post.title}</h1>\n              <p>{getText(post.desc)}</p>\n              <p><strong>Report Reason:</strong> {post.reportReason || 'No reason provided'}</p>\n              <div className='edit'>\n                {currentUser?.isAdmin && (\n                  <>\n                    <img onClick={() => handleUnreport(post.id)} src={Unreport} alt=\"\" />\n                    {/* Add additional buttons or functionality as needed */}\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Admin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}