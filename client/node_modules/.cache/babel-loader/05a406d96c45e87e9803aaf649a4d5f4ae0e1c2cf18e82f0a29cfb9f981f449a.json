{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Documents\\\\TechNest---Blogging-application-main\\\\client\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport img1 from '../img/loginimg.jpg';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [err, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setInputs(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const validatePassword = password => {\n    // Password should be at most 10 characters with a combination of alphabets, letters, and special characters\n    const regex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{1,10}$/;\n    return regex.test(password);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(inputs.email)) {\n      setError('Invalid email format');\n      return;\n    }\n\n    // Validate password format\n    if (!validatePassword(inputs.password)) {\n      setError('Password should be at most 10 characters with a combination of alphabets, letters, and special characters');\n      return;\n    }\n    try {\n      await axios.post('/auth/register', inputs);\n      setSuccessMessage('Registration completed successfully!');\n      // Clear the form and error message on successful registration\n      setInputs({\n        username: '',\n        email: '',\n        password: ''\n      });\n      setError(null);\n    } catch (err) {\n      setError(err.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    style: {\n      backgroundImage: `url(${img1})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        placeholder: \"username\",\n        name: \"username\",\n        value: inputs.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"email\",\n        placeholder: \"email\",\n        name: \"email\",\n        value: inputs.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"password\",\n        placeholder: \"password\",\n        name: \"password\",\n        value: inputs.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), err && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Do you have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"FKMFeJk2OVS+kIz/f1DxoUqIu88=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","img1","axios","jsxDEV","_jsxDEV","Register","_s","inputs","setInputs","username","email","password","err","setError","successMessage","setSuccessMessage","navigate","handleChange","e","prev","target","name","value","validatePassword","regex","test","handleSubmit","preventDefault","emailRegex","post","response","data","className","style","backgroundImage","children","fileName","_jsxFileName","lineNumber","columnNumber","required","type","placeholder","onChange","onClick","color","to","_c","$RefreshReg$"],"sources":["C:/Users/Public/Documents/TechNest---Blogging-application-main/client/src/pages/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport img1 from '../img/loginimg.jpg';\nimport axios from 'axios';\n\nconst Register = () => {\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n\n  const [err, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  const validatePassword = (password) => {\n    // Password should be at most 10 characters with a combination of alphabets, letters, and special characters\n    const regex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{1,10}$/;\n    return regex.test(password);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validate email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(inputs.email)) {\n      setError('Invalid email format');\n      return;\n    }\n\n    // Validate password format\n    if (!validatePassword(inputs.password)) {\n      setError('Password should be at most 10 characters with a combination of alphabets, letters, and special characters');\n      return;\n    }\n\n    try {\n      await axios.post('/auth/register', inputs);\n      setSuccessMessage('Registration completed successfully!');\n      // Clear the form and error message on successful registration\n      setInputs({\n        username: '',\n        email: '',\n        password: '',\n      });\n      setError(null);\n    } catch (err) {\n      setError(err.response.data);\n    }\n  };\n\n  return (\n    <div className='auth' style={{ backgroundImage: `url(${img1})` }}>\n      <h1>Register</h1>\n      <form>\n        <input required type='text' placeholder='username' name='username' value={inputs.username} onChange={handleChange} />\n        <input required type='email' placeholder='email' name='email' value={inputs.email} onChange={handleChange} />\n        <input required type='password' placeholder='password' name='password' value={inputs.password} onChange={handleChange} />\n        <button onClick={handleSubmit}>Register</button>\n        {err && <p>{err}</p>}\n        {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n        <span>\n          Do you have an account? <Link to='/login'>login</Link>\n        </span>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}